#!/bin/bash
# Copyright 2015 The Bazel Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

case "$0" in
/*) self="$0" ;;
*)  self="$PWD/$0";;
esac

output_dir=""
build_only=false

while getopts "o:b" opt_name; do
    case "$opt_name" in
        o) output_dir=$OPTARG;;
        b) build_only=true;;
        *) echo unsupported option ${opt_name};;
    esac
done

shift $((OPTIND - 1))

if [[ -z "$JAVA_RUNFILES" ]]; then
  if [[ -e "${self}.runfiles/%{workspace_name}" ]]; then
    JAVA_RUNFILES="${self}.runfiles/%{workspace_name}"
  fi
fi

root_path=$(pwd)
tmp_dir=${root_path}

if [[ ! -z ${output_dir} ]]; then
  tmp_dir=${output_dir}
  if [[ ! -d ${output_dir} ]]; then
    echo $(pwd)/${output_dir} does not exist.
    exit 1
  fi
else
  tmp_dir=$(mktemp -d ${TMPDIR:-/tmp}/war.XXXXXXXX)
  trap "{ cd ${root_path}; rm -rf ${tmp_dir}; }" EXIT
fi

echo "Deploy dir = ${tmp_dir}, JAVA_HOME=${JAVA_HOME}"
cd ${tmp_dir}

${JAVA_RUNFILES}/%{zipper} x ${JAVA_RUNFILES}/%{war}

if [[ "${build_only}" == true ]]; then
  exit 0
fi

cd ${root_dir}

SUB_PATH="google/appengine/tools/java"
APP_ENGINE_ROOT=${JAVA_RUNFILES}/%{appengine_sdk}
echo "appcfg = ${APP_ENGINE_ROOT}/${SUB_PATH}/bin/appcfg.sh"
echo "Deploy = ${tmp_dir}"
if [ -n "${1-}" ]; then
  echo "app id = ${1}"
  ${APP_ENGINE_ROOT}/${SUB_PATH}/bin/appcfg.sh -A "$1" update ${tmp_dir}
  retCode=$?
else
  ${APP_ENGINE_ROOT}/${SUB_PATH}/bin/appcfg.sh update ${tmp_dir}
  retCode=$?
fi

if [[ ! -d ${output_dir} ]]; then
  rm -rf ${tmp_dir}
  trap - EXIT
fi

exit $retCode
